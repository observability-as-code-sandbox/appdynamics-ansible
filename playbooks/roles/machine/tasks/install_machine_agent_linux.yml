---

- name: Determine if SysV or systemd system
  block:
  - name: Get metadata file content
    command: "file /sbin/init"  #Should this be win_shell?
    register: file_command_output
    ignore_errors: true
    changed_when: false

  - name: Create and add items to dictionary
    set_fact: 
        is_sysV: "{{ file_command_output.stdout | regex_search('.*lib/systemd/systemd.*') == none }}"
    when: 
      - file_command_output is defined

  - name: Print is_sysV
    ansible.builtin.debug:
      msg: "is_sysV is '{{ is_sysV }}'."

- name: systemd installation block
  block:
  - name: Add the Agent as a Service - systemd
    become: true
    template:
      src: templates/appdynamics-machine-agent.service.j2
      dest: /etc/systemd/system/appdynamics-machine-agent.service
      force: true
      owner: root # In cases when Machine Agent must not run as root, you may change it.
      group: root
      mode: 0644
    register: machine_agent_systemd_result

  - name: Enable the Machine Agent to start at system startup - systemd
    become: true
    systemd:
      name: appdynamics-machine-agent
      enabled: yes
      force: true # Force it to override existing symlink in case of an upgrade
      masked: no
  
  # Reload systemd if it is an upgrade or re-installation
  - name:  Reload systemd configs - systemd
    become: true
    systemd:
      daemon_reload: yes
    #when: previous_agent.stat.exists

  - name: Start the agent service - systemd
    become: true
    systemd:
      name: appdynamics-machine-agent
      state: restarted
      daemon_reload: yes
    changed_when: false

  - name: Make sure the service is running - systemd
    command: systemctl status appdynamics-machine-agent
    register: result
    ignore_errors: yes
    changed_when: false
  
  when: is_sysV | bool == False

- name: SysV installation block
  block:
  - name: Add the Agent as a Service - SysV
    become: true
    template:
      src: templates/appdynamics-machine-agent.sysv.j2
      dest: "{{ machine_agent_dest_folder_linux }}/etc/sysconfig/appdynamics-machine-agent"
      force: true
      owner: root # In cases when Machine Agent must not run as root, you may change it.
      group: root
      mode: 0644
    register: machine_agent_systemd_result

  - name: Create symbolic link - SysV
    become: true
    file:
      src: "{{ machine_agent_dest_folder_linux }}/etc/sysconfig/appdynamics-machine-agent"
      dest: /etc/sysconfig/appdynamics-machine-agent
      state: link

  - name: Copy the machine agent to /etc/init.d
    become: true
    ansible.builtin.copy:
      remote_src: yes
      src: "{{ machine_agent_dest_folder_linux }}/etc/sysconfig/appdynamics-machine-agent"
      dest: /etc/init.d/appdynamics-machine-agent

  - name: Enable the Machine Agent to start at system startup - SysV
    become: true
    sysvinit:
      name: appdynamics-machine-agent
      enabled: yes

  - name: Start the agent service - SysV
    become: true
    sysvinit:
      name: appdynamics-machine-agent
      state: started
    changed_when: false

  - name: Make sure the service is running - SysV
    command: service status appdynamics-machine-agent
    register: result
    ignore_errors: yes

  when: is_sysV | bool == True

- name: Show Machine Agent status
  debug:
    var: result

- name: Clean up - remove {{ ma_agent_dest_file }}
  become: true
  file:
    path: "{{ machine_agent_dest_folder_linux }}/{{ ma_agent_dest_file }}"
    state: absent
  changed_when: false
